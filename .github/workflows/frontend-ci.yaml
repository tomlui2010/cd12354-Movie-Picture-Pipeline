name: Frontend Continuous Integration
on:
  pull_request:
    branches: [main]
    paths:
      - 'setup/frontend/**'
  workflow_dispatch:
jobs:
  frontend-ci-lint:
    name: frontend-ci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: v1-npm-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: v1-npm-deps-
      - name: Install the dependencies.
        run: "cd starter/frontend && npm ci  \n"
      - name: Run lint
        run: |
          cd starter/frontend
          npm run lint
        continue-on-error: false
      - name: Run hadolint for dockerile
        run: |
          sudo wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 && sudo chmod +x /usr/local/bin/hadolint
          /usr/local/bin/hadolint starter/frontend/Dockerfile
        continue-on-error: false
  frontend-ci-test:
    name: frontend-ci-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: v1-npm-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: v1-npm-deps-
      - name: Install the dependencies.
        run: "cd starter/frontend\nnpm ci  \n"
      - name: Run test
        run: |
          cd starter/frontend
          npm test
  frontend-ci-build:
    name: frontend-ci-build
    needs:
      - frontend-ci-test
      - frontend-ci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: v1-npm-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: v1-npm-deps-
      - name: Install the dependencies.
        run: |
          cd starter/frontend && npm ci
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build the frontend image
        run: |
          cd starter/frontend
          docker buildx build --build-arg=${{ vars.REACT_APP_MOVIE_API_URL }} --tag mp-frontend:latest .
